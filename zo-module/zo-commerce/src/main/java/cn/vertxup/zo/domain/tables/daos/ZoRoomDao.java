/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.zo.domain.tables.daos;


import cn.vertxup.zo.domain.tables.ZoRoom;
import cn.vertxup.zo.domain.tables.records.ZoRoomRecord;

import io.github.jklingsporn.vertx.jooq.shared.internal.AbstractVertxDAO;

import java.time.LocalDateTime;
import java.util.Collection;

import org.jooq.Configuration;


import java.util.List;
import io.vertx.core.Future;
import io.github.jklingsporn.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ZoRoomDao extends AbstractVertxDAO<ZoRoomRecord, cn.vertxup.zo.domain.tables.pojos.ZoRoom, String, Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>>, Future<cn.vertxup.zo.domain.tables.pojos.ZoRoom>, Future<Integer>, Future<String>> implements io.github.jklingsporn.vertx.jooq.classic.VertxDAO<ZoRoomRecord,cn.vertxup.zo.domain.tables.pojos.ZoRoom,String> {

        /**
     * @param configuration The Configuration used for rendering and query
     * execution.
     * @param vertx the vertx instance
     */
        public ZoRoomDao(Configuration configuration, io.vertx.core.Vertx vertx) {
                super(ZoRoom.ZO_ROOM, cn.vertxup.zo.domain.tables.pojos.ZoRoom.class, new JDBCClassicQueryExecutor<ZoRoomRecord,cn.vertxup.zo.domain.tables.pojos.ZoRoom,String>(configuration,cn.vertxup.zo.domain.tables.pojos.ZoRoom.class,vertx));
        }

        @Override
        protected String getId(cn.vertxup.zo.domain.tables.pojos.ZoRoom object) {
                return object.getPkId();
        }

        /**
     * Find records that have <code>T_ROOMATTRS IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByTRoomattrs(Collection<String> values) {
                return findManyByCondition(ZoRoom.ZO_ROOM.T_ROOMATTRS.in(values));
        }

        /**
     * Find records that have <code>T_ROOMATTRS IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByTRoomattrs(Collection<String> values, int limit) {
                return findManyByCondition(ZoRoom.ZO_ROOM.T_ROOMATTRS.in(values),limit);
        }

        /**
     * Find records that have <code>S_CODE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyBySCode(Collection<String> values) {
                return findManyByCondition(ZoRoom.ZO_ROOM.S_CODE.in(values));
        }

        /**
     * Find records that have <code>S_CODE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyBySCode(Collection<String> values, int limit) {
                return findManyByCondition(ZoRoom.ZO_ROOM.S_CODE.in(values),limit);
        }

        /**
     * Find records that have <code>S_ROOM_NUM IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyBySRoomNum(Collection<String> values) {
                return findManyByCondition(ZoRoom.ZO_ROOM.S_ROOM_NUM.in(values));
        }

        /**
     * Find records that have <code>S_ROOM_NUM IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyBySRoomNum(Collection<String> values, int limit) {
                return findManyByCondition(ZoRoom.ZO_ROOM.S_ROOM_NUM.in(values),limit);
        }

        /**
     * Find records that have <code>J_CONFIG IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByJConfig(Collection<String> values) {
                return findManyByCondition(ZoRoom.ZO_ROOM.J_CONFIG.in(values));
        }

        /**
     * Find records that have <code>J_CONFIG IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByJConfig(Collection<String> values, int limit) {
                return findManyByCondition(ZoRoom.ZO_ROOM.J_CONFIG.in(values),limit);
        }

        /**
     * Find records that have <code>J_FEATURES IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByJFeatures(Collection<String> values) {
                return findManyByCondition(ZoRoom.ZO_ROOM.J_FEATURES.in(values));
        }

        /**
     * Find records that have <code>J_FEATURES IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByJFeatures(Collection<String> values, int limit) {
                return findManyByCondition(ZoRoom.ZO_ROOM.J_FEATURES.in(values),limit);
        }

        /**
     * Find records that have <code>R_FLOOR_ID IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByRFloorId(Collection<String> values) {
                return findManyByCondition(ZoRoom.ZO_ROOM.R_FLOOR_ID.in(values));
        }

        /**
     * Find records that have <code>R_FLOOR_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByRFloorId(Collection<String> values, int limit) {
                return findManyByCondition(ZoRoom.ZO_ROOM.R_FLOOR_ID.in(values),limit);
        }

        /**
     * Find records that have <code>R_HOTEL_ID IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByRHotelId(Collection<String> values) {
                return findManyByCondition(ZoRoom.ZO_ROOM.R_HOTEL_ID.in(values));
        }

        /**
     * Find records that have <code>R_HOTEL_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByRHotelId(Collection<String> values, int limit) {
                return findManyByCondition(ZoRoom.ZO_ROOM.R_HOTEL_ID.in(values),limit);
        }

        /**
     * Find records that have <code>R_ROOM_TYPE_ID IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByRRoomTypeId(Collection<String> values) {
                return findManyByCondition(ZoRoom.ZO_ROOM.R_ROOM_TYPE_ID.in(values));
        }

        /**
     * Find records that have <code>R_ROOM_TYPE_ID IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByRRoomTypeId(Collection<String> values, int limit) {
                return findManyByCondition(ZoRoom.ZO_ROOM.R_ROOM_TYPE_ID.in(values),limit);
        }

        /**
     * Find records that have <code>R_TENT_ID IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByRTentId(Collection<String> values) {
                return findManyByCondition(ZoRoom.ZO_ROOM.R_TENT_ID.in(values));
        }

        /**
     * Find records that have <code>R_TENT_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByRTentId(Collection<String> values, int limit) {
                return findManyByCondition(ZoRoom.ZO_ROOM.R_TENT_ID.in(values),limit);
        }

        /**
     * Find records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByIsActive(Collection<Boolean> values) {
                return findManyByCondition(ZoRoom.ZO_ROOM.IS_ACTIVE.in(values));
        }

        /**
     * Find records that have <code>IS_ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByIsActive(Collection<Boolean> values, int limit) {
                return findManyByCondition(ZoRoom.ZO_ROOM.IS_ACTIVE.in(values),limit);
        }

        /**
     * Find records that have <code>Z_SIGMA IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByZSigma(Collection<String> values) {
                return findManyByCondition(ZoRoom.ZO_ROOM.Z_SIGMA.in(values));
        }

        /**
     * Find records that have <code>Z_SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByZSigma(Collection<String> values, int limit) {
                return findManyByCondition(ZoRoom.ZO_ROOM.Z_SIGMA.in(values),limit);
        }

        /**
     * Find records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByZLanguage(Collection<String> values) {
                return findManyByCondition(ZoRoom.ZO_ROOM.Z_LANGUAGE.in(values));
        }

        /**
     * Find records that have <code>Z_LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByZLanguage(Collection<String> values, int limit) {
                return findManyByCondition(ZoRoom.ZO_ROOM.Z_LANGUAGE.in(values),limit);
        }

        /**
     * Find records that have <code>Z_CREATE_BY IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByZCreateBy(Collection<String> values) {
                return findManyByCondition(ZoRoom.ZO_ROOM.Z_CREATE_BY.in(values));
        }

        /**
     * Find records that have <code>Z_CREATE_BY IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByZCreateBy(Collection<String> values, int limit) {
                return findManyByCondition(ZoRoom.ZO_ROOM.Z_CREATE_BY.in(values),limit);
        }

        /**
     * Find records that have <code>Z_CREATE_TIME IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByZCreateTime(Collection<LocalDateTime> values) {
                return findManyByCondition(ZoRoom.ZO_ROOM.Z_CREATE_TIME.in(values));
        }

        /**
     * Find records that have <code>Z_CREATE_TIME IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByZCreateTime(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(ZoRoom.ZO_ROOM.Z_CREATE_TIME.in(values),limit);
        }

        /**
     * Find records that have <code>Z_UPDATE_BY IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByZUpdateBy(Collection<String> values) {
                return findManyByCondition(ZoRoom.ZO_ROOM.Z_UPDATE_BY.in(values));
        }

        /**
     * Find records that have <code>Z_UPDATE_BY IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByZUpdateBy(Collection<String> values, int limit) {
                return findManyByCondition(ZoRoom.ZO_ROOM.Z_UPDATE_BY.in(values),limit);
        }

        /**
     * Find records that have <code>Z_UPDATE_TIME IN (values)</code>
     * asynchronously
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByZUpdateTime(Collection<LocalDateTime> values) {
                return findManyByCondition(ZoRoom.ZO_ROOM.Z_UPDATE_TIME.in(values));
        }

        /**
     * Find records that have <code>Z_UPDATE_TIME IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<cn.vertxup.zo.domain.tables.pojos.ZoRoom>> findManyByZUpdateTime(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(ZoRoom.ZO_ROOM.Z_UPDATE_TIME.in(values),limit);
        }

        @Override
        public JDBCClassicQueryExecutor<ZoRoomRecord,cn.vertxup.zo.domain.tables.pojos.ZoRoom,String> queryExecutor(){
                return (JDBCClassicQueryExecutor<ZoRoomRecord,cn.vertxup.zo.domain.tables.pojos.ZoRoom,String>) super.queryExecutor();
        }
}
